paths:
  /api/carts/:
    post:
      summary: Create a cart
      tags:
        - Carts
      responses:
        "200":
          description: Cart created successfully
          content:
            application/json:
              schema: 
                type: array
                items: 
                  $ref: '#/components/schemas/EmptyCart'
        "500":
          description: Internal server error
  /api/carts/{cid}:
    get:
      summary: Get a cart by id
      tags:
        - Carts
      parameters:
      - name: cid
        in: path
        required: true
        description: Cart id to get
        schema:
          type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/requestBodies/CartObject'
      responses:
        "200":
          description: Cart was fetched successfully
          content:
          application/json:
            schema: 
              type: object
              items: 
                $ref: '#/components/schemas/Cart'
        "500":
          description: Internal server error
    put:
      summary: Update a cart by id
      tags:
        - Carts
      parameters:
      - name: cid
        in: path
        required: true
        description: Cart id to update
        schema:
          type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/requestBodies/CartObject'
      responses:
        "200":
          description: Product was updated successfully
        "500":
          description: Internal server error
    delete:
      summary: Delete all products from cart
      tags:
        - Carts
      parameters:
      - name: cid
        in: path
        required: true
        description: Cart id (where all products will be deleted)
        schema:
          type: string
      responses:
        "200":
          description: All products were deleted successfully
        "500":
          description: Internal server error
  /api/carts/{cid}/products/{pid}:
    post:
      summary: Add product to cart
      tags:
        - Carts
      parameters:
      - name: cid
        in: path
        required: true
        description: Cart id (where the product will be added)
        schema:
          type: string
      - name: pid
        in: path
        required: true
        description: Product id
        schema:
          type: string
      responses:
        "200":
          description: Product was added successfully
        "500":
          description: Internal server error
    put: 
      summary: Update quantity of a product in the cart
      tags:
        - Carts
      parameters:
      - name: cid
        in: path
        required: true
        description: Cart id (where the product will be updated)
        schema:
          type: string
      - name: pid
        in: path
        required: true
        description: Product id
        schema:
          type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/requestBodies/CartQuantity'
      responses:
        "200":
          description: Product was added successfully
        "500":
          description: Internal server error
    delete:
      summary: Delete product from cart
      tags:
        - Carts
      parameters:
      - name: cid
        in: path
        required: true
        description: Cart id (where the product will be deleted)
        schema:
          type: string
      - name: pid
        in: path
        required: true
        description: Product id (to be deleted from the cart)
        schema:
          type: string
      responses:
        "200":
          description: Product was deleted successfully
        "500":
          description: Internal server error-
  /api/carts/{cid}/purchase:
    get:
      summary: Generate the purchase of a cart by its id 
      tags:
        - Carts
      parameters:
      - name: cid
        in: path
        required: true
        description: Cart id to generate the purchase
        schema:
          type: string
      responses:
        "200":
          description: Cart was purchased successfully
        "500":
          description: Internal server error

components:
  schemas:
    EmptyCart:
      type: Object
      properties:
        _id:
          type: string
          description: Id autogenerated by MongoDB
        products:
          type: array
          items:
            type: object
          description: Populated products in cart
      example:
        _id: 64c2aa17a03fc266e7e36ed6
        products: []
    Cart:
      type: Object
      properties:
        _id:
          type: string
          description: Id autogenerated by MongoDB
        products:
          type: array
          items:
            type: object
          description: Populated products in cart
        quantity:
          type: integer
          description: Quantity of products in cart
      example:
        _id: ObjectId('649c3d1ca492b743a8d8f33b')
        products: [
          {
            product: {
                    owner: admin,
                    _id: 645e5df41a4b57a9cf70c5cc,
                    title: Seagate Portable 2TB External Hard Drive HDD,
                    description: Easily store and access 2TB to content on the go with the Seagate Portable Drive, a USB external hard drive,
                    thumbnails: [
                        "https://m.media-amazon.com/images/I/81tjLksKixL.__AC_SY445_SX342_QL70_FMwebp_.jpg",
                        "https://m.media-amazon.com/images/I/91QqR55XhQL._AC_SX679_.jpg",
                        "https://m.media-amazon.com/images/I/91rx2KE8YGL._AC_SX679_.jpg",
                        "https://m.media-amazon.com/images/I/918-cGeMaRL._AC_SX679_.jpg"
                    ],
                    category: electronics,
                    price: 62,
                    stock: 37,
                    status: true,
                    code: D443,
                    __v: 0
                },
                quantity: 3,
                _id: 64c2a667cc612c07f0954a0f
            },
            {
                product: {
                    owner: admin,
                    _id: 645e5e421a4b57a9cf70c5d0,
                    title: Baby Playmat Kick & Play Piano,
                    description: Infant activity gym with 4 ways to play as your baby grows from newborn to toddler featuring Amazon-exclusive Navy Fawn fashion,
                    thumbnails: [
                        "https://m.media-amazon.com/images/I/71lbET+ulpL._AC_SX679_.jpg",
                        "https://m.media-amazon.com/images/I/815EI4HlZPL._AC_SX679_.jpg",
                        "https://m.media-amazon.com/images/I/818wmGRHMUL._AC_SX679_.jpg",
                        "https://m.media-amazon.com/images/I/81-xJpiy33L._AC_SX679_.jpg",
                        "https://m.media-amazon.com/images/I/71bjnIJCvtL._AC_SX679_.jpg",
                        "https://m.media-amazon.com/images/I/81rRMHjkHTL._AC_SX679_.jpg"
                    ],
                    category: baby,
                    price: 47,
                    stock: 61,
                    status: true,
                    code: N9953,
                    __v: 0
                },
                quantity: 1,
                _id: 64c2a670cc612c07f0954a1c
            }
        ]
  requestBodies:
    CartObject:
      type: object
      properties:
        products:
          type: array
          items:
            type: object
          description: Product id
      example:
        products: [
          {
            product: 645e5e421a4b57a9cf70c5d0,
            quantity: 5
          },
          {
            product: 645e5e651a4b57a9cf70c5d4,
            quantity: 1
          }
        ]
    CartQuantity:
      type: object
      properties:
        quantity:
          type: integer
          description: Quantity of products in cart
      example:
        quantity: 3